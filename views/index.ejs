<!DOCTYPE html>
<html lang="en">
<html>
  <head>
    <meta charset="utf-8">
    <title>Statbot - Stats for <%= username %></title>

    <!--<link rel="stylesheet" href="http://g.raphaeljs.com/demo.css" />-->

    <script type="text/javascript" src="http://cdnjs.cloudflare.com/ajax/libs/raphael/2.0.1/raphael-min.js"></script>
    <script type="text/javascript" src="http://g.raphaeljs.com/g.raphael.js"></script>
    <script type="text/javascript" src="http://g.raphaeljs.com/g.dot.js"></script>

    <script type="text/javascript">
      window.onload = function () {
        // Calculates the offset from UTC to the current timezone.  It's
        //   returned as a number of minutes, hince the devision by 60.
        var tzOffset = new Date().getTimezoneOffset() / 60;

        // This is an array of all valid UTC hour codes.  Used to render the
        //   x-axis labels on the chart.
        var hours = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
                     17, 18, 19, 20, 21, 22, 23].map(
            function (hour) {
            // We'll loop through the array of UTC times and convert them to the
            //   local timezone using the offset obtained above.
            var localTime = hour - tzOffset;

            // This subtraction magic yields some shady numbers.  Let's convert
            //   them to the true faith!
            if (localTime < 0) {
              localTime += 24;
            } else if (localTime > 23) {
              localTime -= 24;
            }

            // Finally, the times have to be a string for Raphael to render them.
            return localTime.toString();
          });

        // The Raphael made me do it.  Don't ask.
        var r = Raphael("holder");
        var dotchart = r.dotchart(10,10,620,260,
          [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],
          [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
          <%=data%>, {
          max:10,
          heat: true,
          axis: "0 0 1 1",
          axisylabels: ["Sun", "Sat", "Fri", "Thu" ,"Wed", "Tue", "Mon"],
          axisxlabels: hours,
          axisxstep: 23,
          axisystep: 6,
          axisxtype: " ",
          axisytype: " "
        }).hover(function () {
          this.marker = this.marker || r.tag(this.x, this.y, this.value.toString() + " %", 0, this.r + 2).insertBefore(this);
          this.marker.show();
        }, function() {
          this.marker && this.marker.hide();
        });
      }
    </script>
  </head>

    <body class="raphael" id="g.raphael.dmitry.baranovskiy.com">
      <h1>What's the best time to catch <%= username %> online?</h1>
      <div id="holder"></div>
      <p>
          <%= username %> is currently <%= currently_online ? 'online' : 'offline' %>. Darker dots == higher chance of being online.  Calculations are based on historical data for <%= username %>.  Past performance is no guarantee of future results.  All times are UTC.
      </p>
  </body>
</html>
